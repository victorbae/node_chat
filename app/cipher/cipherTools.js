const ursa = require('ursa');
const keys = require('./keyGenerator');

    //gerador chave
    function generatorKeys(){
        return keys.keys();
    }

    //pegador de chave publica da chave
    function getPublicKey(generateKey){
        return keys.publicPem(generateKey);
    }

    //pegador de chave privada da chave
    function getPrivateKey(generateKey){
        return keys.privatePem(generateKey);
    }

    //cifrador/criptografador
    async function cipher(msg, publicKey){
      let publicKey2 = "LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF0bEFLZ25qdFMwaGE3Y0kwUHdtWQpoUldIRmJkVjl1UzkrbTlyZ1J2SS9BWEYzWk9JNGFWblZUUXY2cEJlTnhsaFlPRU51OFI0NHhzaXJlOGJackpBCmx1VnRBajROVlVUL2diVHN6SzM3SlZtaWRtUUtFQm42MEQ3YVYveDZ0ZC9IUkNxQW9iejdnMTJOVTVYTGh1OFcKa2kwSXBGVWFQTkF4akk5Y0ZENHVqQnFyNTNXTVN5RFVRYXIzUFEzVzc5bkhyNEZ6TmZ4MGRQMGtpMDRvYmJ0ZwplSnFRL2I5RHhyZjR1UVBtbXVyaDgwVS9mNWtYZVBBeWpmRjB1OHdVTlh4M292dUpCVmI2RVdaZVk2dmZIa09QCng2cFQvRnVTZWhlVEdwSXB1Z1JrNFhub1VDVWx5NWdxRW84bXBkOG9LRWhiUXdqc1pOWHlZeFFGbXdvMkVySFMKTVFJREFRQUIKLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0tCg==";
      let privateKey2 = "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdGxBS2duanRTMGhhN2NJMFB3bVloUldIRmJkVjl1UzkrbTlyZ1J2SS9BWEYzWk9JCjRhVm5WVFF2NnBCZU54bGhZT0VOdThSNDR4c2lyZThiWnJKQWx1VnRBajROVlVUL2diVHN6SzM3SlZtaWRtUUsKRUJuNjBEN2FWL3g2dGQvSFJDcUFvYno3ZzEyTlU1WExodThXa2kwSXBGVWFQTkF4akk5Y0ZENHVqQnFyNTNXTQpTeURVUWFyM1BRM1c3OW5IcjRGek5meDBkUDBraTA0b2JidGdlSnFRL2I5RHhyZjR1UVBtbXVyaDgwVS9mNWtYCmVQQXlqZkYwdTh3VU5YeDNvdnVKQlZiNkVXWmVZNnZmSGtPUHg2cFQvRnVTZWhlVEdwSXB1Z1JrNFhub1VDVWwKeTVncUVvOG1wZDhvS0VoYlF3anNaTlh5WXhRRm13bzJFckhTTVFJREFRQUJBb0lCQUY3bU56SkhSQzRGMGQ4bApVaERtSzlCS3JuQnRhSUFGL2FZWXpYcjlQWmVDWWNhKy8yZUZzODQwUmlUeFZUbVZLbzFGV09LK21MYU83M1JlCm5JTE9rclI1WkU3Z2dndzZ5RTE2SWpGQTl4UXdIbE5HSzc3SjV6YnpJTERnS2ZmMkxrR2JaaTNLczVsajN5YjkKT0Y1YW9nTWhFZmlJbkFtL3phci9ETTAwdVFJUUZ2VkVXUzdoYVY2WFBCOXIzSG1iSEJFMmpWTEZlUU13bmx5bQoyUjgzUjVxNExTblJmekJFOUZEM3g2Q3hJQmxSM29QYWJmVmh6NHFMNDNZSkxlMXhXUVJvZGNxQTY3cXBUL1RSCmt3TDZPK0xZOVFIa3NnUnZaRlNsUTBOSG1iQVFjUTBCRmEvQWVzVFlWYTEweVZmM0E2a3VRTVIrazVBcjRsL3QKbmJGRTl1RUNnWUVBNG90a01qY1hoRnh1MUNHMDlnU1RFVVNOY2VaQWl3ZDVVS3hyZWNKRUlwcGxZZ3RvTUJTQgpvclF5bitPZmJ0S05JNFJ0dzJPTnZhaWhmZ1pTV2FibENaK2FwbHpTSEk2ZG1yZk5aWUcyVW1QbkNCbENBWXlTCjBaM0ExUDUvaUFyUG1jRlV4bmF3eVhUMTZMVllhNndKUk81UkRiVmNiOTlsVGJSaDF5ZUhKNjBDZ1lFQXpnUmcKMlRpWHRmdTJqbDRld0Y2ZW9vT2JnczlVa0o0VjBaUnZLZC9FZEVud3Z0a2l5M1pFYU5ybDVMalI1NnBjeE5CWAp5UGlkY3JlQ3ZNYlNEZFdoMTVtT3RIQ2JaQ3VYajlTOW4ybnZCMW5aMXgxVngra1VtMGFRcFNFRDE2SVRFcVhwCk9LWUNMYjNySzJBbjg1c2R3Wk9URWNUT2dLWFE0M3l5bjlxUDlSVUNnWUJOOGpIdVNTQlJUVkJnc3B4RnpYc2cKaE5xNTVzUXNVY3orNGVRMHg0K1Q3RldYcjE4UXMrMktvcitNWGRBY1hGdHRiZ0lxS1JXNnZNdWJ4ZWNOcTZ2QQpiT2JUK0xuZVUzK01uVk1SYXRqbGJqUXVpQ282eURnMzRUUlkxSnZpbmYyaDVIQWJ2UGpFeC9aWU5CVVJMdWNkCmpYWGI1cHZBYmplM3phbWdVcHhoSFFLQmdFbXBoUnVHUWJDZkxQb2dxeXdyYU50QTVYVFRQekJxWmZERyt5eGsKeHpDeFUzUlozVGdVdEljdFphL3ZhWlpFOHVDb2dncm80aHNuaElhTkxJUW4wN05zUTNzL0hFQ24yWXhqQzk0WgpHWTl1VUJhN2RYV0NZSXpZb1ZWNXhZN3ZjNVJpWUU2U0JRdG44ZE5Ua1ZWb0xDNlAzckVteHBOM05vWndpc25mCmMwTzFBb0dBYllMT3RPTFVkMytzYWpiUXhmaU5uVjRKUi91Y21zTVJua245Y3FwWjB1VDJIL0pFOHRVVUZCeHMKTFJrREVPK3NXenF2aTE3a3UyOFFFL2hSVVpiRWJsV09ENUtpM2lTQlBKZXJ0Z3YxaklxQlZFTDZJTmlaYnNIYwpqakFYTmdzeUFQNmRWa1BycGZCa3NSM200TzNRYStVOXVGcmZqWEpoODNWVVAzTVNzMVU9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==";
        let pub = await ursa.createPublicKey(publicKey2, 'base64');
        //let msgBuffer = new Buffer(msg);
        let msgCripto = pub.encrypt(msg);

        let priv = await ursa.createPrivateKey(privateKey2, '', 'base64');

        let msgDescripto = await priv.decrypt(msgCripto);

        console.log('mensagem cript tos= ' + msgCripto.toString());

        console.log('mensagem cript = ' + msgCripto);

        console.log('mensagem descript = ' + msgDescripto.toString());

        return msgCripto;
    }

    //decifrador/decriptografador
    async function decipher(msgCripto, privateKey){
    let privateKey2=
    "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdGxBS2duanRTMGhhN2NJMFB3bVloUldIRmJkVjl1UzkrbTlyZ1J2SS9BWEYzWk9JCjRhVm5WVFF2NnBCZU54bGhZT0VOdThSNDR4c2lyZThiWnJKQWx1VnRBajROVlVUL2diVHN6SzM3SlZtaWRtUUsKRUJuNjBEN2FWL3g2dGQvSFJDcUFvYno3ZzEyTlU1WExodThXa2kwSXBGVWFQTkF4akk5Y0ZENHVqQnFyNTNXTQpTeURVUWFyM1BRM1c3OW5IcjRGek5meDBkUDBraTA0b2JidGdlSnFRL2I5RHhyZjR1UVBtbXVyaDgwVS9mNWtYCmVQQXlqZkYwdTh3VU5YeDNvdnVKQlZiNkVXWmVZNnZmSGtPUHg2cFQvRnVTZWhlVEdwSXB1Z1JrNFhub1VDVWwKeTVncUVvOG1wZDhvS0VoYlF3anNaTlh5WXhRRm13bzJFckhTTVFJREFRQUJBb0lCQUY3bU56SkhSQzRGMGQ4bApVaERtSzlCS3JuQnRhSUFGL2FZWXpYcjlQWmVDWWNhKy8yZUZzODQwUmlUeFZUbVZLbzFGV09LK21MYU83M1JlCm5JTE9rclI1WkU3Z2dndzZ5RTE2SWpGQTl4UXdIbE5HSzc3SjV6YnpJTERnS2ZmMkxrR2JaaTNLczVsajN5YjkKT0Y1YW9nTWhFZmlJbkFtL3phci9ETTAwdVFJUUZ2VkVXUzdoYVY2WFBCOXIzSG1iSEJFMmpWTEZlUU13bmx5bQoyUjgzUjVxNExTblJmekJFOUZEM3g2Q3hJQmxSM29QYWJmVmh6NHFMNDNZSkxlMXhXUVJvZGNxQTY3cXBUL1RSCmt3TDZPK0xZOVFIa3NnUnZaRlNsUTBOSG1iQVFjUTBCRmEvQWVzVFlWYTEweVZmM0E2a3VRTVIrazVBcjRsL3QKbmJGRTl1RUNnWUVBNG90a01qY1hoRnh1MUNHMDlnU1RFVVNOY2VaQWl3ZDVVS3hyZWNKRUlwcGxZZ3RvTUJTQgpvclF5bitPZmJ0S05JNFJ0dzJPTnZhaWhmZ1pTV2FibENaK2FwbHpTSEk2ZG1yZk5aWUcyVW1QbkNCbENBWXlTCjBaM0ExUDUvaUFyUG1jRlV4bmF3eVhUMTZMVllhNndKUk81UkRiVmNiOTlsVGJSaDF5ZUhKNjBDZ1lFQXpnUmcKMlRpWHRmdTJqbDRld0Y2ZW9vT2JnczlVa0o0VjBaUnZLZC9FZEVud3Z0a2l5M1pFYU5ybDVMalI1NnBjeE5CWAp5UGlkY3JlQ3ZNYlNEZFdoMTVtT3RIQ2JaQ3VYajlTOW4ybnZCMW5aMXgxVngra1VtMGFRcFNFRDE2SVRFcVhwCk9LWUNMYjNySzJBbjg1c2R3Wk9URWNUT2dLWFE0M3l5bjlxUDlSVUNnWUJOOGpIdVNTQlJUVkJnc3B4RnpYc2cKaE5xNTVzUXNVY3orNGVRMHg0K1Q3RldYcjE4UXMrMktvcitNWGRBY1hGdHRiZ0lxS1JXNnZNdWJ4ZWNOcTZ2QQpiT2JUK0xuZVUzK01uVk1SYXRqbGJqUXVpQ282eURnMzRUUlkxSnZpbmYyaDVIQWJ2UGpFeC9aWU5CVVJMdWNkCmpYWGI1cHZBYmplM3phbWdVcHhoSFFLQmdFbXBoUnVHUWJDZkxQb2dxeXdyYU50QTVYVFRQekJxWmZERyt5eGsKeHpDeFUzUlozVGdVdEljdFphL3ZhWlpFOHVDb2dncm80aHNuaElhTkxJUW4wN05zUTNzL0hFQ24yWXhqQzk0WgpHWTl1VUJhN2RYV0NZSXpZb1ZWNXhZN3ZjNVJpWUU2U0JRdG44ZE5Ua1ZWb0xDNlAzckVteHBOM05vWndpc25mCmMwTzFBb0dBYllMT3RPTFVkMytzYWpiUXhmaU5uVjRKUi91Y21zTVJua245Y3FwWjB1VDJIL0pFOHRVVUZCeHMKTFJrREVPK3NXenF2aTE3a3UyOFFFL2hSVVpiRWJsV09ENUtpM2lTQlBKZXJ0Z3YxaklxQlZFTDZJTmlaYnNIYwpqakFYTmdzeUFQNmRWa1BycGZCa3NSM200TzNRYStVOXVGcmZqWEpoODNWVVAzTVNzMVU9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==";


        let priv = await  ursa.createPrivateKey(privateKey2, '', 'base64');

        console.log('Mensagem cripto:  ' + msgCripto);

        let msgDescripto = await priv.decrypt(msgCripto);

        return msgDescripto.toString();

    }

module.exports.generatorKeys = generatorKeys;
module.exports.getPublicKey = getPublicKey;
module.exports.getPrivateKey = getPrivateKey;
module.exports.cipher = cipher;
module.exports.decipher = decipher;
